@model EmployeePortal.ViewModels.AttendanceCreateViewModel

@{
    ViewData["Title"] = "Mark Attendance";
}

<h2>Mark Attendance</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}

<form asp-action="Create" method="post">
    <div class="mb-3">
        <label asp-for="EmployeeId" class="form-label"></label>
        <select asp-for="EmployeeId" class="form-select" asp-items="@(new SelectList(Model.Employees, "Id", "FullName"))">
            <option value="">-- Select Employee --</option>
        </select>
        <span asp-validation-for="EmployeeId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Date" class="form-label"></label>
        <input asp-for="Date" type="date" class="form-control" />
        <span asp-validation-for="Date" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Status" class="form-label"></label>
        <select asp-for="Status" class="form-select">
            <option value="">-- Select Status --</option>
            @foreach (var status in Enum.GetValues(typeof(EmployeePortal.Models.AttendanceStatus)))
            {
                <option value="@status">@status</option>
            }
        </select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Mark</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
